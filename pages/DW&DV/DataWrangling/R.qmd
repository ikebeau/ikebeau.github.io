---
title: "Audible Books"
author: "Isaac Beaumont"
date: "`r format(Sys.time(), '%B %d, %Y')`"
format: 
    html:
        theme: journal
        code-fold: true
        code-tools: true
editor: visual
keep-md: false
echo: false
warning: false
---

```{r}
pacman::p_load(tidyverse, rio, tools, rvest)
```

```{r}
url <- "https://www.xe.com/currencyconverter/convert/?Amount=1&From=INR&To=USD"

webpage <- read_html(url)

exchange_rate <- webpage %>%
  html_node("p.sc-423c2a5f-1.gPUWGS") %>%
  html_text(trim = TRUE)

numeric_values <- as.numeric(gsub("[^0-9.]", "", exchange_rate))
```

```{r}
get_rating_and_reviews <- function(stars) {
  if (is.na(stars) || stars == "") {
    return(c(rating = NA, reviews = NA))
  }
  cleaner_stars <- gsub('Not rated yet', '', stars)
  numbers <- as.numeric(unlist(regmatches(cleaner_stars, gregexpr("\\d+\\.?\\d*", cleaner_stars))))
  rating <- ifelse(length(numbers) > 0, numbers[1], NA)
  reviews <- ifelse(length(numbers) > 1, numbers[length(numbers)], NA)
  return(c(rating = rating, reviews = reviews))
}
```

```{r}
calculate_runtime <- function(runtime) {
  if (is.na(runtime) || runtime == "") return(0)
  clean_runtime <- gsub('and|s|\\s+', '', runtime, ignore.case = TRUE)
  if (grepl('Lessthan1minute', clean_runtime, ignore.case = TRUE)) {
    return(0.5)
  }
  hours <- as.numeric(gsub('.*?(\\d+)hr.*', '\\1', clean_runtime, ignore.case = TRUE))
  minutes <- as.numeric(gsub('.*?(\\d+)min.*', '\\1', clean_runtime, ignore.case = TRUE))
  total_minutes <- ifelse(is.na(hours), 0, hours * 60) + ifelse(is.na(minutes), 0, minutes)
  return(total_minutes)
}

```

```{r}
df <- import("C:/Users/ikebe/OneDrive/Documents/Git/ikebeau.github.io/pages/DW&DV/Data/Raw/audible_uncleaned.parquet")

```

```{r}
pander::pander(head(df))
```

```{r}
final <- df |> 
  mutate(across(c(author, narrator), ~ gsub("Writtenby:|Narratedby:", "", .)),
         language = toTitleCase(language),
         releasedate = as.Date(releasedate, format='%d-%m-%y'),
         Runtime = sapply(time, calculate_runtime),
         Price_INR = as.numeric(price),
         Price_USD = round((as.numeric(price) * numeric_values), 2),
         author = str_replace_all(author, "(?<=\\w)(?=[A-Z])", " "),
         narrator = str_replace_all(narrator, "(?<=\\w)(?=[A-Z])", " "),
         author = str_split(author, ",\\s*"),
         narrator = str_split(narrator, ",\\s*")
         ) |> 
  rowwise() |> 
  mutate(Ratings = get_rating_and_reviews(stars)[1],
         Reviews = get_rating_and_reviews(stars)[2]) |> 
  ungroup() |> 
  mutate(Ratings = ifelse(Ratings == 0, NA, Ratings),
         Reviews = ifelse(Reviews == 0, NA, Reviews)) |>
  select(-stars, -time, -price) |>
  as.data.frame()

```

```{r}
pander::pander(head(final))
```
